Link PlantUML
//www.plantuml.com/plantuml/dpng/hLRDSjis4BxpAJ2wM4cSJ9t-p9JJG-H6hZDscuwKjZFEv02AIn932jI0GDIgxPjqfXS_Gq-vwSKAO061e2cvX_fWGelTRnUxtmBxgfDKIBLkaZCovseDWahMyYu1_ODSKP41-JqX-c_nzftzNjxEVhABxnRxltx0rVpsClapGPi5T5shnChRNR-zlREBN-PlxkPeS3k__jukbjzUpwxiQhwuEq3Sw920ozys3c9McvZCCg2ZUSjp4CRkZDmqjEk09olp9SiDWwPWfH8Eurbd923Ul4u9un9bXJbVYiVKADwMGTueNdfBMDNWpOAIfBbyH4FG_T_WTMhAvKEb6oCTKq591Xt8dKn9rhODK8vIMxDvyEc2uFbyB0uZZ08zvI2OBTggasrH5D3atjoi8tFXov4EAlDigq1ezQLQho4E26kJ2P2oZmiYZNo-_u1x5OK2U4gkgVvuuNR_oQ3pwPDUC1z1cCF0Od-lCX3JNhJdPATzNWM1jllOiXmDDmsLUby0lwHg2wAUPlXDJH4PBy_9fksO8Q53SsIwwl7doLWECPAZwUiaL0tmgOEBOmimTweSi5W7XWkKKjiWm7syEarnjk5a6t2w1c_wi35GKaBscigKw7zEudAq_B7FmL-be95arIek8qb5UMxAoVF055_BI4dBPZnZ885FXMC619BKvfPu_m5Bknpa9LIZZpVB6gYuXgEy4BG4BHD3ouWPrWTkyAdzaUBj5BGm4y0VuSmm84bLjweCutYjmzdHgd7SyaVjjTIJmQbZ2DiPZsAS4zJNNL9HQ2HddGzr21_8CylNZ4VKSNdo_3taPnfb17W-9jxe21Y8iQsY5T9sRxmNq_XO5_XhGIYU6uQOJp0rL3j5_wFS2ZTGKqYOPILamqIFNO33s34U7m6jfOAc0IkCcX1Mslc1a2O5RXcGBFSyKWOxOAkAArx6tQjVpZGyei4Qtz6kjY2wLO7d0qZGMQXbZ5PHkMHGRXIlXmyHvLjJQVwmN54YntsDfIu0uDD-mZo3ZicT8S6XfcwZvUf0xLv4K49Z6jG3RCJ-Km6679flU3zqCxmNl7NSjDxaaYhJxFz9zvtjkIcsti3Yd5GqF6sZxuVF2zTTkwMD35F9ewobMKapYDawx9lJ_FMFgi7nBgOd8FXu3vpX-MgSpqYXdsw2MU_CNRI_jtTH1mdDEYdeIX9xUBJofxMPYheMK_hpmzjiTDB1WvZ-ZTBiylnQ0BjJSyOxT8g4Yq8Ov-lHK2QVfnUJtWk-_TyTl7GEpiXCw-uOnH4WCSF2vBCNBvvEoFFdP78n2SnFYIMbJ5pjOhrHjgMaRjThnPcPZoHPCsUCe_KtVsXJCmcFIDqGFTpmOt6G3yCuFCWbLFj_X4mybDMxy7fshas96Q4aeQf8R1oFwQ3pMCiEuP5QDFiQZQT6yol4ExgBE8aV-YR1GT-YxoTCmW7dukjOVrJfombIPwJQGJqb-tjpYVfwXv3GGDkQ_c2IiLZ9HpB1AStySr9lYrTnWkC1bXMj0yhBvr_4CRcBsZdgkJ60-4OU8oPcD2LkmfV9A-2vMZV_0W00
@startuml
' Enumerations
enum Farbe {
    ROT
    BLAU
    GRÜN
    GELB
}

enum Ressource {
    HOLZ
    WEIZEN
    LEHM
    SCHAF
    ERZ
}

enum Kartentyp {
    Aktion
    Ressource
    Sonder
}

' Klassen
class Spielfigur {
    +spielerID: int
    +farbe: Farbe
}

class Siedlung {
    +eckeID: int
}

class Stadt {
    +eckeID: int
}

class Straße {
    +kanteID: int
}

class Kante {
    +kanteID: int
    +besetzt: boolean
    +startEckeID: int
    +endEckeID: int
}

class Ecke {
    +eckeID: int
    +besetzt: boolean
}

class Rohstofffeld {
    +feldID: int
    +ressource: Ressource
    +wuerfelSumme: int
}

class Spielbrett {
    +felder: Rohstofffeld[]
    +haefen: Hafen[]
    +würfeln(): int
    +versetzeRäuber(feldID: int, zielFeldID: int): void
    +platzierenBauwerk(bauwerk: String, position: int, spielerFarbe: Farbe): boolean
}

class Räuber {
    +feldID: int
    +stehlen(spielerID: int): void
}

class Zug {
    +spieler: Spieler
    +aktionen: String[]
}

class Spieler {
    +spielerID: int
    +name: String
    +farbe: Farbe
    +gebDat: Date
    +bauwerkSP: int
    +extraSP: int
    +countSP: int
    +hand: Hand
    +wuerfeln(): int
    +handelnAnbieten(rohstoffe: Rohstoffkarte[], zielSpieler: Spieler): boolean
    +handelAblehnen(anfragenderSpieler: Spieler): void
    +karteSpielen(karte: Karte): void
    +bauen(bauwerk: String, position: int): boolean
    +tauschenBank(anzahl: int, rohstoff: Ressource): Rohstoffkarte
    +tauschenHafen(anzahl: int, rohstoff: Ressource, tauschverhaeltnis: String): Rohstoffkarte
}

class Admin {
    +spiel: Spiel
    +starteSpiel(): void
    +endeSpiel(): void
    +pausiereSpiel(): void
    +fortsetzeSpiel(): void
}

class Spiel {
    +spieler: Spieler[]
    +runde: Runde
}

class Hand {
    +spielerID: int
    +rohstoffe: Rohstoffkarte[]
    +haelfteAbgeben(anzahl: int, ressource: Ressource): void
}

class Runde {
    +aktuelleRunde: int
    +naechsterSpieler(): Spieler
}

class Karte {
    +bezeichnung: String
    +typ: Kartentyp
}

class Aktionskarte extends Karte {
    +effekt: String
    +hatSiegpunkt: boolean
    +anwenden(): void
}

class Rohstoffkarte extends Karte {
    +ressource: Ressource
}

class Sonderkarte extends Karte {
    +besitzer: spielerID
    +bonus: String
}

class Regelwerk {
    +prüfeHandel(handelsAnfrage: String): boolean
    +prüfeBau(bauAnfrage: String): boolean
    +prüfeTausch(tauschAnfrage: String, hafen: Hafen): boolean
}

class Ressourcenverwaltung {
    +rohstoffe: Rohstoffkarte[]
    +abgabe(anzahl: int, spieler: Spieler, ressource: Ressource): void
    +vergabeRohstoff(spieler: Spieler, ressourcen: Ressource): void
}

' Hafenklassen für Handelsverhältnisse
abstract class Hafen {
    +hafenID: int
    +tauschVerhaeltnis: String
    +eckeID: int
    +vergeben: boolean
}


class DreiZuEinsHafen extends Hafen {
    +ressource: Ressource
    +tauschVerhaeltnis: "3:1"
}

class ZweiZuEinsHafen extends Hafen {
    +ressource: Ressource
    +tauschVerhaeltnis: "2:1"
}

' Beziehungen
Zug "0..*" -- "1" Regelwerk: prüft
Spieler "0..*" -- "1" Ressourcenverwaltung: kommuniziert mit
Spielfigur <|-- Stadt
Spielfigur <|-- Siedlung
Spielfigur <|-- Straße
Spielfigur "0..*" -- "1" Spieler: gehört
Siedlung "0..1" -- "1" Ecke: steht auf
Stadt "0..1" -- "1" Ecke: steht auf
Straße "0..1" -- "1" Kante: steht auf
Rohstofffeld "1" *-- "6" Ecke
Rohstofffeld "1" *-- "6" Kante
Räuber "1" -- "1" Rohstofffeld: steht auf
Spielbrett "1" *-- "19" Rohstofffeld
Spielbrett "1" *-- "5" Hafen
Zug "0..*" -- "1" Spielbrett: ändert
Spieler "1" -- "0..*" Zug: initiiert
Spieler "1" *-- "1" Hand
Hand "1" *-- "0..*" Karte
Admin <|-- Spieler
Spieler "2-4" -- "1" Spiel: spielt
Spiel "1" *-- "1..*" Runde
Spieler "0..*" -- "1" Räuber: versetzt
@enduml
