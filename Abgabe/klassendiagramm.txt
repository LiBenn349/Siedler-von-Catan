Link PlantUML
//www.plantuml.com/plantuml/png/hLRDSjis4BxpAJ2wM4cSJ9t-p9JJG-H6hZDscuwKjZFEv02AovyXjTI0GDIgxPjqfXS_Gq-vwSKAO0c1e2cvX_fWGelTRnUxtmBxgfLSIBMkepCsHxK6mMNPO1k1_i6kk4Y0_Hun_RTu-yv-BszdFzd5TulzNp_GQdvx6VqPaSq2shPHOkNihj_Utjd5B_CtTtCok9rVVsyNos-lPrTsDL_S7I1kk920yhTD1p6hJ4ncwT79lC4KXB4xOpSrRrl0Q6M-RBafeSxAN8aEurbh923Ul8vPYP9acJbVJCVKACwsXBHMc3jBM5NWpBoIvAbyH4Fm_T_WT2gEyg7IZP6EgP0aWHRaJiOiQPeQE9BKrcpkVP8KC9sFnM64GQ2d77YpHLEqiico3EhKcPjrO2vSEU91PPvj5GYjlbJhDOG1KMqI0LBsSK74WS_t7sYlu901nkoQwuyJRlUV33fEd_I2-GZ270OM-tkLW9ZseZrdE-tpoWkqtSUcJCbmKtEfzmNW9LTR4DKqeMziYbXYViusJLiQ4dPe7PckUlnvCfP3YkHe-be9HGquxU32s3pCdSe7BDQ1qOAat3O8e8jNfodCDfni0-HhSAOF6uCaEIIlkOoP_jT9kXmjV-npy5SfU21PDGfb82aufgQSc0PCSRNqIbesmwG42JWL7JF0awGojyJx3rJQvI0llXfzl5bIGu4QZcCcU0vQ9eQM0JEi3zh0gVqHq-taj5mc01_Xp30WoLMxAWpZiDBXx7XHTznoH-srr9F1gKC8sncFOfmpqjTTKd2e9PQj2tK8xyapIzSb1jJfykJuUyZFDCW8O3ectkW8IX1ZMraZfEtUS2-ayR4kSDU2K9WQXfYFDpLKEqN_ezpoDr2TIPWbEIJ3H8zTWCFOAHuN0Q-aWhe6AmoQ45RQ-O6G9WNTqYDPxZca17PGhWfKc8VTgr_Es3-YtfhUqRQo8BfL0TC19EWiL394AxXSbf1l55R3XuZZrbGQ7vGhJEIuhx7KUG1wsa-O9z2MScT8SAXfjz6WEb2x5n7aK9i6TG0RiV-KWI67vXlT3-sCxWLd7JQjCxdaoZJxVz9zPtjkIgqti3Xd1VTFs-ZxuVA2kcktl9P-AdcKjJp9UG8XMuTzSvg_xb4rECx5z0G4ZlV06PslelcCPVhfPfJrrjn5-tjx5xKGyQILWgyaiuSdAtTQcwcWQocbFp-ypKOd7Jg8wTyWpLsUNmiexzIyn9QSEiBHhnDyFHhAvFFuOj9xmRV_kuENdOCpTWcx4Wg5EM1aHeN9PozUF9smvy_Pv6BYUHypIqaPTPKBzKQv5hEgMQyLbcOwacnTad4tM7_pXpOrS_13gHkXXnjkAFRoOHY7vpY7Ol-Fa963ideNJizEjJ4p0vHaN6MHZUCn7N8UQjaHF50B9b-ZyTHeVaLuHtS99t8ZtyGxw5lq_VWvsEDSV1tgZofzEI7YZ5JRgyTiVs-kK5Tl5v8pqBQcEqfPbg6IYsH2CvhvrqcTBLt44Gq7L5QozYWldtyHnjHTqvsZdXi3I2_aCM9IHcFMpVSoUWMOgdNzBm00
@startuml
' Enumerations
enum Farbe {
    ROT
    BLAU
    GRÜN
    GELB
}

enum Ressource {
    HOLZ
    WEIZEN
    LEHM
    SCHAF
    ERZ
}

enum Kartentyp {
    Aktion
    Ressource
    Sonder
}

' Klassen
class Spielfigur {
    +spielerID: int
    +farbe: Farbe
}

class Siedlung {
    +eckeID: int
}

class Stadt {
    +eckeID: int
}

class Straße {
    +kanteID: int
}

class Kante {
    +kanteID: int
    +besetzt: boolean
    +startEckeID: int
    +endEckeID: int
}

class Ecke {
    +eckeID: int
    +besetzt: boolean
}

class Rohstofffeld {
    +feldID: int
    +ressource: Ressource
    +wuerfelSumme: int
}

class Spielbrett {
    +felder: Rohstofffeld[]
    +haefen: Hafen[]
    +würfeln(): int
    +versetzeRäuber(feldID: int, zielFeldID: int): void
    +platzierenBauwerk(bauwerk: String, position: int, spielerFarbe: Farbe): boolean
}

class Räuber {
    +feldID: int
    +stehlen(spielerID: int): void
}

class Zug {
    +spieler: Spieler
    +aktionen: String[]
}

class Spieler {
    +spielerID: int
    +name: String
    +farbe: Farbe
    +gebDat: Date
    +bauwerkSP: int
    +extraSP: int
    +countSP: int
    +hand: Hand
    +wuerfeln(): int
    +handelnAnbieten(rohstoffe: Rohstoffkarte[], zielSpieler: Spieler): boolean
    +handelAblehnen(anfragenderSpieler: Spieler): void
    +karteSpielen(karte: Karte): void
    +bauen(bauwerk: String, position: int): boolean
    +tauschenBank(anzahl: int, rohstoff: Ressource): Rohstoffkarte
    +tauschenHafen(anzahl: int, rohstoff: Ressource, tauschverhaeltnis: String): Rohstoffkarte
}

class Admin {
    +spiel: Spiel
    +starteSpiel(): void
    +endeSpiel(): void
    +pausiereSpiel(): void
    +fortsetzeSpiel(): void
}

class Spiel {
    +spieler: Spieler[]
    +runde: Runde
}

class Hand {
    +spielerID: int
    +rohstoffe: Rohstoffkarte[]
    +haelfteAbgeben(anzahl: int, ressource: Ressource): void
}

class Runde {
    +aktuelleRunde: int
    +naechsterSpieler(): Spieler
}

class Karte {
    +bezeichnung: String
    +typ: Kartentyp
}

class Aktionskarte extends Karte {
    +effekt: String
    +hatSiegpunkt: boolean
    +anwenden(): void
}

class Rohstoffkarte extends Karte {
    +ressource: Ressource
}

class Sonderkarte extends Karte {
    +besitzer: spielerID
    +bonus: String
}

class Regelwerk {
    +prüfeHandel(handelsAnfrage: String): boolean
    +prüfeBau(bauAnfrage: String): boolean
    +prüfeTausch(tauschAnfrage: String, hafen: Hafen): boolean
}

class Ressourcenverwaltung {
    +rohstoffe: Rohstoffkarte[]
    +abgabe(anzahl: int, spieler: Spieler, ressource: Ressource): void
    +vergabeRohstoff(spieler: Spieler, ressourcen: Ressource): void
}

' Hafenklassen für Handelsverhältnisse
abstract class Hafen {
    +hafenID: int
    +tauschVerhaeltnis: String
    +eckeID: int
    +vergeben: boolean
}


class DreiZuEinsHafen extends Hafen {
    +ressource: Ressource
    +tauschVerhaeltnis: "3:1"
}

class ZweiZuEinsHafen extends Hafen {
    +ressource: Ressource
    +tauschVerhaeltnis: "2:1"
}

' Beziehungen
Zug "0..*" -- "1" Regelwerk: prüft
Spieler "0..*" -- "1" Ressourcenverwaltung: kommuniziert mit
Spielfigur <|-- Stadt
Spielfigur <|-- Siedlung
Spielfigur <|-- Straße
Spielfigur "0..*" -- "1" Spieler: gehört
Siedlung "0..1" -- "1" Ecke: steht auf
Stadt "0..1" -- "1" Ecke: steht auf
Straße "0..1" -- "1" Kante: steht auf
Rohstofffeld "1" *-- "6" Ecke
Rohstofffeld "1" *-- "6" Kante
Räuber "1" -- "1" Rohstofffeld: steht auf
Spielbrett "1" *-- "19" Rohstofffeld
Spielbrett "1" *-- "5" Hafen
Zug "0..*" -- "1" Spielbrett: ändert
Spieler "1" -- "0..*" Zug: initiiert
Spieler "1" *-- "1" Hand
Hand "1" *-- "0..*" Karte
Admin <|-- Spieler
Spieler "2-4" -- "1" Spiel: spielt
Spiel "1" *-- "1..*" Runde
Spieler "0..*" -- "1" Räuber: versetzt
@enduml